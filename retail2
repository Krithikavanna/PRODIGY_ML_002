# Importing necessary libraries
import numpy as np
import pandas as pd
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler
import matplotlib.pyplot as plt

# Sample data: purchase history of customers (e.g., amount spent on different products)
data = {
    'CustomerID': [1, 2, 3, 4, 5],
    'Product1': [100, 50, 200, 150, 120],
    'Product2': [80, 30, 100, 90, 110],
    'Product3': [120, 70, 180, 160, 130]
}

# Creating DataFrame
df = pd.DataFrame(data)

# Selecting features for clustering (amount spent on different products)
X = df.drop('CustomerID', axis=1)

# Standardizing the features
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Choosing the number of clusters (K)
k = 3

# Creating KMeans model
kmeans = KMeans(n_clusters=k, random_state=42)

# Fitting the model
kmeans.fit(X_scaled)

# Adding cluster labels to the DataFrame
df['Cluster'] = kmeans.labels_

# Visualizing the clusters
plt.scatter(df['Product1'], df['Product2'], c=df['Cluster'], cmap='viridis')
plt.xlabel('Product 1')
plt.ylabel('Product 2')
plt.title('K-means Clustering of Customers')
plt.colorbar(label='Cluster')
plt.show()

# Displaying the cluster centers
cluster_centers = scaler.inverse_transform(kmeans.cluster_centers_)
print("Cluster Centers:")
print(pd.DataFrame(cluster_centers, columns=X.columns))
